#!/usr/bin/env python3
"""
Simple email test script to verify SMTP configuration
"""

import os
import sys
from pathlib import Path

# Add project root to path
sys.path.insert(0, str(Path(__file__).parent))

from senders.email_sender import EmailSender

def test_email_config():
    """Test email configuration."""
    
    print("🧪 Testing Email Configuration")
    print("-" * 40)
    
    # Check environment variables
    required_vars = ['SMTP_HOST', 'SMTP_PORT', 'SMTP_USERNAME', 'SMTP_PASSWORD']
    missing_vars = []
    
    for var in required_vars:
        value = os.getenv(var)
        if value:
            if var == 'SMTP_PASSWORD':
                print(f"✅ {var}: {'*' * len(value)}")
            else:
                print(f"✅ {var}: {value}")
        else:
            print(f"❌ {var}: Not set")
            missing_vars.append(var)
    
    if missing_vars:
        print(f"\n❌ Missing environment variables: {', '.join(missing_vars)}")
        print("\nTo set them, run:")
        for var in missing_vars:
            print(f"export {var}='your-value'")
        return False
    
    print("\n📧 Testing email sending...")
    
    try:
        sender = EmailSender()
        
        test_html = """
        <html>
        <body>
            <h1>🧪 AI Coding Digest Test Email</h1>
            <p>This is a test email to verify your SMTP configuration is working.</p>
            <p>If you receive this, your email setup is ready for the digest system!</p>
            <hr>
            <p><em>Generated by AI Coding Digest Test</em></p>
        </body>
        </html>
        """
        
        recipient = "873425118@qq.com"
        
        success = sender.send_digest_email(
            to_email=recipient,
            subject="🧪 AI Coding Digest - Email Test",
            html_content=test_html
        )
        
        if success:
            print(f"✅ Test email sent successfully to {recipient}")
            return True
        else:
            print("❌ Failed to send test email")
            return False
            
    except Exception as e:
        print(f"❌ Error testing email: {e}")
        return False

if __name__ == "__main__":
    test_email_config()